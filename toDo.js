// TODO immediately and important
// 1. Добавить докер (Done)
// 2. Добавлять и забирать текущего пациента с сервера (Done)
// 3. Не выгружать данные ысех пациентов а только их количество и первого пациента(второго) (Done)
// 4. После перезапуска сервера переписывает значения ID (Done)

// TODO not immediately and important
// 1. Добавить возможность загружать картинку пользователю
// 2. Сделать вырез в форме под фотографию

// TODO immediately and not important
// 1.

// TODO not immediately and not important
// 1. Перейти на Linux (Done)
// 2. Адаптивнаая верстка

// Sequance
// 0. Frontend
//     - Patient page
//     - Doctors page
// 1. Search
//     - Возвращать резолюцию клиента (продумать множественное возвращение)
//     - Поднять все миддлварки
// 2. Delete
//     - Менять статус в резолюции
//     - Поднять все миддлварки
// 3. NextClient
//     - Придумать метод для текущего пациента (удалять только по заданию диагноза(некст кнопки))
//     - Поднять все миддлварки
// 4. SetDiagnose
//     - Просто проверить работоспособнось
//     - Поднять все миддлварки
// 5. Изменить роуты для удаления и добавления резолюции и поиска
//     - Разбить по сущностям patient, resolution (Также patientSignIn, signUp)
// 6. Проверка на JWT для каждой страницы
//     - Делать редирект на страницу авторизации
// 7. Cron task
//     - Придумать нормальную реализацию для изменеия статуса для устарвших диагнозов
// 8. Проблемы с timezone
//     - Когда пациет записывается то дожно быть нормальное время
// 9. Test
//     - Покрыть все юнит тестами по правилам
// 10. Docker
//     - Закинуть все на докер хаб
//     - Поднять докер
// 11. WebSocket на изменение очереди
// 12. Залить проект на хироку
// 13. Секъюрность для паролей
// 14. Изменить БД
